// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int     @id @default(autoincrement())
  username  String  @unique
  password  String
  name      String?
  orders    Order[]
  cart      Cart?   // One-to-one relation with Cart
}

model Plant {
  id           Int @id @default(autoincrement())
  name         String @unique
  description  String
  price        Float
  stock        Int
  category     Category @relation(fields: [categoryId], references: [id])
  categoryId   Int
  images       Image[]
  orders       OrderItem[]
  cartItems    CartItem[]  // Relation to CartItem for cart functionality
  createdAt    DateTime @default(now())
}

model Image {
  id       Int @id @default(autoincrement())
  url      String
  plant    Plant @relation(fields: [plantId], references: [id])
  plantId  Int
}

model Order {
  id         Int @id @default(autoincrement())
  user       User  @relation(fields: [userId], references: [id])
  userId     Int 
  items      OrderItem[]
  total      Float
  status     OrderStatus @default(PENDING)
  createdAt  DateTime @default(now())
}

model OrderItem {
  id        Int @id @default(autoincrement())
  plant     Plant @relation(fields: [plantId], references: [id])
  plantId   Int 
  quantity  Int
  order     Order @relation(fields: [orderId], references: [id])
  orderId   Int
}

model Cart {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
  items     CartItem[]
  createdAt DateTime  @default(now())
}

model CartItem {
  id        Int      @id @default(autoincrement())
  plant     Plant    @relation(fields: [plantId], references: [id])
  plantId   Int
  quantity  Int
  cart      Cart     @relation(fields: [cartId], references: [id])
  cartId    Int
}

enum OrderStatus {
  PENDING
  SHIPPED
  DELIVERED
  CANCELLED
}

model Category {
  id      Int @id @default(autoincrement())
  name    String @unique
  plants  Plant[]
}
